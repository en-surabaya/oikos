version: "3"

services:
    adminer:
        profiles:
            - "dev"
            - "prod"
        image: adminer
        ports:
            - "8080:8080"
        networks:
            - app-network
    db:
        profiles:
            - "dev"
            - "prod"
        build:
            context: ./oikos-backend/database
            dockerfile: Dockerfile
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            MYSQL_USER: oikos
            MYSQL_PASSWORD: oikos
            MYSQL_DATABASE: oikos
            MYSQL_ROOT_PASSWORD: root
        networks:
            - app-network
        ports:
            - 3307:3306
        volumes:
            - ./oikos-backend/database/data/:/var/lib/mysql

    backend_dev:
        profiles:
            - "dev"
        image: oikos:1.0.0
        user: 1000:1000
        build:
            context: ./oikos-backend
            target: development
            dockerfile: Dockerfile
        command: npm run start:debug
        ports:
            - 9229:9229
        networks:
            - app-network
        volumes:
            - ./oikos-backend:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    backend_prod:
        profiles:
            - "prod"
        image: oikos-prod:1.0.0
        user: 1000:1000
        build:
            context: ./oikos-backend
            target: production
            dockerfile: Dockerfile
        command: npm run start:prod
        ports:
            - 5000:3000
            - 9229:9229
        networks:
            - app-network
        volumes:
            - ./oikos-backend:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    frontend_dev:
        profiles:
            - "dev"
        image: frontend-dev:1.0.0
        user: 1000:1000
        build:
            context: ./oikos-frontend
            target: development
            dockerfile: Dockerfile
        command: npm run start
        networks:
            - app-network
        volumes:
            - ./oikos-frontend:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    nginx:
        image: nginx:stable-alpine
        volumes:
            - ./nginx/templates:/etc/nginx/templates
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        environment:
            - NGINX_PORT=80
            - BACKEND_PORT=5000
        ports:
            - 80:80
        networks:
            - app-network
        restart: always

networks:
    app-network:
        driver: bridge
